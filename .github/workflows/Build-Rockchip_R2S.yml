name: ÁºñËØëRockchip-R2SÂõ∫‰ª∂

on:
  repository_dispatch:
  workflow_dispatch:

  schedule:
    - cron: 15 16 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: Rockchip/feeds.conf.default
  CONFIG_FILE: r2s/r2s_la.config
  DIY_P1_SH: Rockchip/diy-part1.sh
  DIY_P2_SH: Rockchip/diy-part2.sh
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: Rockchip-r2s

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/ysx88/ysx88/main/assets/depends)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date "+%YÂπ¥%mÊúà%dÊó• %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages config.buildinfo feeds.buildinfo openwrt-rockchip-armv8.manifest profiles.json sha256sums version.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        echo -e "- ‚≠êÔ∏èËøôÊòØ‰∏™R2SÂõ∫‰ª∂ÂåÖÔºåÂÜÖÂê´Â§ö‰∏™ËÆæÂ§áÔºÅ\n" >> release.txt
        echo -e "- ‚≠êÔ∏èËØ∑Ê≥®ÊÑèÈÄâÊã©‰Ω†ÈúÄË¶ÅÁöÑËÆæÂ§áÂõ∫‰ª∂ÔºÅ\n" >> release.txt
        echo -e "- üî¥ÈªòËÆ§ÁÆ°ÁêÜÂú∞ÂùÄÔºö\`192.168.1.1\`\n" >> release.txt
        echo -e "- üî¥ÈªòËÆ§ÂØÜÁ†ÅÔºö\`password\`\n" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        name: ${{ env.DATE }} ‚ù§Ô∏è ${{ env.FILE_NAME }}
        allowUpdates: true
        tag_name: ${{ env.FILE_NAME }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
